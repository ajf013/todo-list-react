[{"/home/ajf013/Projects/React-todo-list/src/index.js":"1","/home/ajf013/Projects/React-todo-list/src/App.js":"2","/home/ajf013/Projects/React-todo-list/src/components/Footer/Footer.js":"3","/home/ajf013/Projects/React-todo-list/src/modals/EditTask.js":"4","/home/ajf013/Projects/React-todo-list/src/components/Card.js":"5","/home/ajf013/Projects/React-todo-list/src/serviceWorkerRegistration.js":"6","/home/ajf013/Projects/React-todo-list/src/modals/CreateTask.js":"7"},{"size":421,"mtime":1625029243158,"results":"8","hashOfConfig":"9"},{"size":363,"mtime":1624978451551,"results":"10","hashOfConfig":"9"},{"size":1499,"mtime":1624978011154,"results":"11","hashOfConfig":"9"},{"size":1804,"mtime":1625019937599,"results":"12","hashOfConfig":"9"},{"size":1902,"mtime":1625030914814,"results":"13","hashOfConfig":"9"},{"size":5314,"mtime":1624980974580,"results":"14","hashOfConfig":"9"},{"size":1647,"mtime":1625030735538,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wt47uy",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ajf013/Projects/React-todo-list/src/index.js",[],"/home/ajf013/Projects/React-todo-list/src/App.js",[],["33","34"],"/home/ajf013/Projects/React-todo-list/src/components/Footer/Footer.js",[],["35","36"],"/home/ajf013/Projects/React-todo-list/src/modals/EditTask.js",["37"],"import React, { useState , useEffect} from 'react';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\n\nconst EditTaskPopup = ({modal, toggle, updateTask, taskObj}) => {\n    const [taskName, setTaskName] = useState('');\n    const [description, setDescription] = useState('');\n\n    const handleChange = (e) => {\n        \n        const {name, value} = e.target\n\n        if(name === \"taskName\"){\n            setTaskName(value)\n        }else{\n            setDescription(value)\n        }\n\n\n    }\n\n    useEffect(() => {\n        setTaskName(taskObj.Name)\n        setDescription(taskObj.Description)\n    },[])\n\n    const handleUpdate = (e) => {\n        e.preventDefault();\n        let tempObj = {}\n        tempObj['Name'] = taskName\n        tempObj['Description'] = description\n        updateTask(tempObj)\n    }\n\n    return (\n        <Modal isOpen={modal} toggle={toggle}>\n            <ModalHeader toggle={toggle}>Update Task</ModalHeader>\n            <ModalBody>\n            \n                    <div className = \"form-group\">\n                        <label>Task Name</label>\n                        <input type=\"text\" className = \"form-control\" value = {taskName} onChange = {handleChange} name = \"taskName\"/>\n                    </div>\n                    <div className = \"form-group\">\n                        <label>Description</label>\n                        <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea>\n                    </div>\n                \n            </ModalBody>\n            \n            <button class=\"ui green button\" onClick={handleUpdate}>Update</button>{' '}\n            <button class=\"ui grey button\" onClick={toggle}>Cancel</button>\n              </Modal>\n    );\n};\n\nexport default EditTaskPopup;","/home/ajf013/Projects/React-todo-list/src/components/Card.js",[],"/home/ajf013/Projects/React-todo-list/src/serviceWorkerRegistration.js",[],"/home/ajf013/Projects/React-todo-list/src/modals/CreateTask.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"38","replacedBy":"42"},{"ruleId":"40","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":24,"column":7,"nodeType":"46","endLine":24,"endColumn":9,"suggestions":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],["48"],["49"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'taskObj.Description' and 'taskObj.Name'. Either include them or remove the dependency array. If 'setTaskName' needs the current value of 'taskObj.Name', you can also switch to useReducer instead of useState and read 'taskObj.Name' in the reducer.","ArrayExpression",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [taskObj.Description, taskObj.Name]",{"range":"53","text":"54"},[607,609],"[taskObj.Description, taskObj.Name]"]